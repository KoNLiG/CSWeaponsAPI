# vim: set sts=2 ts=8 sw=2 tw=99 et ft=python:
import os.path

projectName = 'CSWeaponsAPI'

# smsdk_ext.cpp will be automatically added later
sourceFiles = [
  'extension.cpp',
  'natives.cpp',
  'classes.cpp'
]

# Fix various compiler errors under sample_ext's AMBuildScript
compiler = builder.compiler
compiler.cxxincludes += [os.path.join(Extension.sm_root, 'public', 'CDetour')]

if compiler.like('gcc'):
	compiler.defines += ['HAVE_STRING_H']

	if (compiler.vendor == 'clang' and compiler.version >= 'clang-10'):
		compiler.cxxflags += ['-Wno-expansion-to-defined', '-Wno-implicit-int-float-conversion']

project = Extension.HL2Project(builder, projectName + '.ext')
project.sources += [
	sourceFiles,
	os.path.join(Extension.sm_root, 'public', 'smsdk_ext.cpp'),
	os.path.join(Extension.sm_root, 'public', 'CDetour', 'detours.cpp'),
	os.path.join(Extension.sm_root, 'public', 'asm', 'asm.c'),
]

# SM 1.10+
libudisFolder = os.path.join(Extension.sm_root, 'public', 'libudis86')
udisSources = ['decode.c', 'itab.c', 'syn-att.c', 'syn-intel.c', 'syn.c', 'udis86.c']

for udisSource in udisSources:
	project.sources += [os.path.join(libudisFolder, udisSource)]

Extension.HL2Config(project, projectName + '.ext.' + Extension.sdk.ext, Extension.sdk)

Extension.extensions = builder.Add(project)
